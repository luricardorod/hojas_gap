CNTRL_MODE_SELECT_I_NAME;
DATA_IO_DCS_BW_V_68;
DATA_IO_DCS_BW_V_69;
DATA_IO_DCS_BW_V_70;
DATA_IO_DCS_BW_V_71;
DATA_IO_DCS_BW_V_72;
DATA_IO_DCS_BW_V_73;
DATA_IO_DCS_BW_V_74;
DATA_IO_DCS_BW_V_75;
DATA_IO_DCS_BW_V_76;
DATA_IO_DCS_BW_V_77;
DATA_IO_DCS_BW_V_78;
DATA_IO_DCS_BW_V_79;
DATA_IO_DCS_BW_V_80;
DATA_IO_DCS_BW_V_81;
DATA_IO_LL2_BW_V_68;
DATA_IO_LL2_BW_V_69;
DATA_IO_LL2_BW_V_70;
DATA_IO_LL2_BW_V_71;
DATA_IO_LL2_BW_V_72;
DATA_IO_LL2_BW_V_73;
DATA_IO_LL2_BW_V_74;
DATA_IO_LL2_BW_V_75;
DATA_IO_LL2_BW_V_76;
DATA_IO_LL2_BW_V_77;
DATA_IO_LL2_BW_V_78;
DATA_IO_LL2_BW_V_79;
DATA_IO_LL2_BW_V_80;
DATA_IO_LL2_BW_V_81;
DATA_IO_RL2_BW_V_68;
DATA_IO_RL2_BW_V_69;
DATA_IO_RL2_BW_V_70;
DATA_IO_RL2_BW_V_71;
DATA_IO_RL2_BW_V_72;
DATA_IO_RL2_BW_V_73;
DATA_IO_RL2_BW_V_74;
DATA_IO_RL2_BW_V_75;
DATA_IO_RL2_BW_V_76;
DATA_IO_RL2_BW_V_77;
DATA_IO_RL2_BW_V_78;
DATA_IO_RL2_BW_V_79;
DATA_IO_RL2_BW_V_80;
DATA_IO_RL2_BW_V_81;
OP_INTRFC_CDP100_MX;
OP_INTRFC_CDPABRT_MX;
OP_INTRFC_CDPAM_MX;
OP_INTRFC_CDPAT0_MX;
OP_INTRFC_CDPCALENMX;
OP_INTRFC_CDPNULL_MX;
OP_INTRFC_CDPSTRK_MX;
OP_INTRFC_ST8100_MX;
OP_INTRFC_ST8ABRT_MX;
OP_INTRFC_ST8AM_MX;
OP_INTRFC_ST8AT0_MX;
OP_INTRFC_ST8CALENMX;
OP_INTRFC_ST8NULL_MX;
OP_INTRFC_ST8STRK_MX;
OP_INTRFC_CDP_STROKE;
OP_INTRFC_CDPNULL;
OP_INTRFC_CDPCALENBL;
OP_INTRFC_CDP_ABORT;
OP_INTRFC_CDP_AT_0;
OP_INTRFC_CDP_AT_100;
OP_INTRFC_ST8_STROKE;
OP_INTRFC_ST8_NULL;
OP_INTRFC_ST8CALENBL;
OP_INTRFC_ST8_A_M;
OP_INTRFC_ST8_ABORT;
OP_INTRFC_ST8_AT_0;
OP_INTRFC_ST8_AT_100


//// CDP MANUAL STROKE ENABLE BLOQUE 1

  switch (CNTRL_MODE_SELECT_I_NAME){
    
    case 2:
      OP_INTRFC_CDPSTRK_MX = DATA_IO_LL2_BW_V_68;
    break;
    case 3:
      OP_INTRFC_CDPSTRK_MX = DATA_IO_RL2_BW_V_68;
    break;    
    case 5:
      OP_INTRFC_CDPSTRK_MX = DATA_IO_DCS_BW_V_68;
    break;    
    default:
      OP_INTRFC_CDPSTRK_MX = 0;
    break;
  }

  OP_INTRFC_CDP_STROKE = OP_INTRFC_CDPCALENMX;

//// CDP NULL CALC ENABLE BLOQUE 2

  switch (CNTRL_MODE.SELECT.I_NAME){
    
    case 2:
      OP_INTRFC_CDPNULL_MX = DATA_IO_LL2_BW_V_69;
    break;
    case 3:
      OP_INTRFC_CDPNULL_MX = DATA_IO_RL2_BW_V_69;
    break;
    case 5:
      OP_INTRFC_CDPNULL_MX = DATA_IO_DCS_BW_V_69;
    break;
    default:
      OP_INTRFC_CDPNULL_MX = 0;
    break;
  }

  OP_INTRFC_CDPNULL = OP_INTRFC_CDPNULL_MX;
  
//// CDP CAL ENABLE BLOQUE 3

    switch (CNTRL_MODE.SELECT.I_NAME){
      
      case 2:
        OP_INTRFC_CDPCALENMX = DATA_IO_LL2_BW_V_70;
      break;
      case 3:
        OP_INTRFC_CDPCALENMX = DATA_IO_RL2_BW_V_70;
      break;
      case 5:
        OP_INTRFC_CDPCALENMX = DATA_IO_DCS_BW_V_70;
      break;
      default:
        OP_INTRFC_CDPCALENMX = 0;
      break;
  
    }

    OP_INTRFC_CDPCALENBL = OP_INTRFC_CDPCALENMX;

//// CDO AUTO/MANUAL CAL BLOQUE 4


  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDPAM_MX = DATA_IO_LL2_BW_V_71;
    break;
    case 3:
      OP_INTRFC_CDPAM_MX = DATA_IO_RL2_BW_V_71;
    break;
    case 5:
      OP_INTRFC_CDPAM_MX = DATA_IO_DCS_BW_V_71;
    break;
    default:
      OP_INTRFC_CDPAM_MX = 0;
    break;
  }

  OP_INTRFC_CDP_A_M = OP_INTRFC_CDPAM_MX;

//// CDP CAL ABORT BLOQUE 5

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDPABRT_MX = DATA_IO_LL2_BW_V_72;
    break;
    case 3:
      OP_INTRFC_CDPABRT_MX = DATA_IO_RL2_BW_V_72;
    break;
    case 5:
      OP_INTRFC_CDPABRT_MX = DATA_IO_DCS_BW_V_72;
    break;
    default:
      OP_INTRFC_CDPABRT_MX = 0;
    break;
  }

  OP_INTRFC_CDP_ABORT = OP_INTRFC_CDPABRT_MX;

//// CDP AT MIN BLOQUE 6

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDPAT0_MX = DATA_IO_LL2_BW_V_73;
    break;
    case 3:
      OP_INTRFC_CDPAT0_MX = DATA_IO_RL2_BW_V_73;
    break;
    case 5:
      OP_INTRFC_CDPAT0_MX = DATA_IO_DCS_BW_V_73;
    break;
    default:
      OP_INTRFC_CDPAT0_MX = 0;
    break;
  }
  
  OP_INTRFC_CDP_AT_0 = OP_INTRFC_CDPAT0_MX;

//// CDP AT MAX BLOQUE 7

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDP100_MX = DATA_IO_LL2_BW_V_74;
    break;
    case 3:
      OP_INTRFC_CDP100_MX = DATA_IO_RL2_BW_V_74;
    break;
    case 5:
      OP_INTRFC_CDP100_MX = DATA_IO_DCS_BW_V_74;
    break;
    default:
      OP_INTRFC_CDP100_MX = 0;
    break;
  }

  OP_INTRFC_CDP_AT_100 = OP_INTRFC_CDP100_MX; 

//// ST8 MANUAL STROKE ENABLE BLOQUE 8

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8STRK_MX = DATA_IO_LL2_BW_V_75;
    break;
    case 3:
      OP_INTRFC_ST8STRK_MX = DATA_IO_RL2_BW_V_75;
    break;
    case 5:
      OP_INTRFC_ST8STRK_MX = DATA_IO_DCS_BW_V_75;
    break;
    default:
      OP_INTRFC_ST8STRK_MX = 0;
    break;
  }

  OP_INTRFC_ST8_STROKE = OP_INTRFC_ST8STRK_MX;

//// ST8 NULL CALC ENABLE BLOQUE 9 

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8NULL_MX = DATA_IO_LL2_BW_V_76;
    break;
    case 3:
      OP_INTRFC_ST8NULL_MX = DATA_IO_RL2_BW_V_76;
    break;
    case 5:
      OP_INTRFC_ST8NULL_MX = DATA_IO_DCS_BW_V_76;
    break;
    default:
      OP_INTRFC_ST8NULL_MX = 0;
    break;
  }
  
  OP_INTRFC_ST8_NULL = OP_INTRFC_ST8NULL_MX;

//// ST8 CAL ENABLE BLOQUE 10

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8CALENMX = DATA_IO_LL2_BW_V_77;
    break;
    case 3:
      OP_INTRFC_ST8CALENMX = DATA_IO_RL2_BW_V_77;
    break;
    case 5:
      OP_INTRFC_ST8CALENMX = DATA_IO_DCS_BW_V_77;
    break;
    default:
      OP_INTRFC_ST8CALENMX = 0;
    break;
  }

  OP_INTRFC_ST8CALENBL = OP_INTRFC_ST8CALENMX;

//// ST8 AUTO/MANUAL CAL BLOQUE 11

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8AM_MX = DATA_IO_LL2_BW_V_78;
    break;
    case 3:
      OP_INTRFC_ST8AM_MX = DATA_IO_RL2_BW_V_78;
    break;
    case 5:
      OP_INTRFC_ST8AM_MX = DATA_IO_DCS_BW_V_78;
    break;
    default:
      OP_INTRFC_ST8AM_MX = 0;
    break;
  }

  OP_INTRFC_ST8_A_M = OP_INTRFC_ST8AM_MX; 

//// ST8 CAL ABORT BLOQUE 12

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8ABRT_MX = DATA_IO_LL2_BW_V_79;
    break;
    case 3:
      OP_INTRFC_ST8ABRT_MX = DATA_IO_RL2_BW_V_79;
    break;
    case 5:
      OP_INTRFC_ST8ABRT_MX = DATA_IO_DCS_BW_V_79;
    break;
    default:
      OP_INTRFC_ST8ABRT_MX = 0;
    break;
  }

  OP_INTRFC_ST8_ABORT = OP_INTRFC_ST8ABRT_MX;

//// ST8 AT MIN BLOQUE 13

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8AT0_MX = DATA_IO_LL2_BW_V_80;
    break;
    case 3:
      OP_INTRFC_ST8AT0_MX = DATA_IO_RL2_BW_V_80;
    break;
    case 5:
      OP_INTRFC_ST8AT0_MX = DATA_IO_DCS_BW_V_80;
    break;
    default:
      OP_INTRFC_ST8AT0_MX = 0
    break;
  }

  OP_INTRFC_ST8_AT_0 = OP_INTRFC_ST8AT0_MX;

//// ST8 AT MAX BLOQUE 14

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8100_MX = DATA_IO_LL2_BW_V_81;
    break;
    case 3:
      OP_INTRFC_ST8100_MX = DATA_IO_RL2_BW_V_81;
    break;
    case 5:
      OP_INTRFC_ST8100_MX = DATA_IO_DCS_BW_V_81;
    break;
    default:
      OP_INTRFC_ST8100_MX = 0;
    break;
  }

  OP_INTRFC_ST8_AT_100 = OP_INTRFC_ST8100_MX;

