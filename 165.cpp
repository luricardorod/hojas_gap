CDP AT MAX
CDP AT MIN
CDP AUTO/MANUAL CAL
CDP CAL ABORT
CDP CAL ENABLE
CDP INTERFACE
CDP MANUAL STROKE ENABLE
CDP NULL CALC ENABLE
CDP_A_M
CDP_ABORT
CDP_AT_0
CDP_AT_100
CDP_NULL
CDP_STROKE
CDP100_MX
CDPABRT_MX
CDPAM_MX
CDPAT0_MX
CDPCALENBL
CDPCALENMX
CDPNULL_MX
CDPSTRK_MX
CNTRL_MODE_SELECT_I_NAME
DATA_IO_DCS_BW_V_68
DATA_IO_DCS_BW_V_69
DATA_IO_DCS_BW_V_70
DATA_IO_DCS_BW_V_71
DATA_IO_DCS_BW_V_72
DATA_IO_DCS_BW_V_73
DATA_IO_DCS_BW_V_74
DATA_IO_DCS_BW_V_75
DATA_IO_DCS_BW_V_76
DATA_IO_DCS_BW_V_77
DATA_IO_DCS_BW_V_78
DATA_IO_DCS_BW_V_79
DATA_IO_DCS_BW_V_80
DATA_IO_DCS_BW_V_81
DATA_IO_LL2_BW_V_68
DATA_IO_LL2_BW_V_69
DATA_IO_LL2_BW_V_70
DATA_IO_LL2_BW_V_71
DATA_IO_LL2_BW_V_72
DATA_IO_LL2_BW_V_73
DATA_IO_LL2_BW_V_74
DATA_IO_LL2_BW_V_75
DATA_IO_LL2_BW_V_76
DATA_IO_LL2_BW_V_77
DATA_IO_LL2_BW_V_78
DATA_IO_LL2_BW_V_79
DATA_IO_LL2_BW_V_80
DATA_IO_LL2_BW_V_81
DATA_IO_RL2_BW_V_68
DATA_IO_RL2_BW_V_69
DATA_IO_RL2_BW_V_70
DATA_IO_RL2_BW_V_71
DATA_IO_RL2_BW_V_72
DATA_IO_RL2_BW_V_73
DATA_IO_RL2_BW_V_74
DATA_IO_RL2_BW_V_75
DATA_IO_RL2_BW_V_76
DATA_IO_RL2_BW_V_77
DATA_IO_RL2_BW_V_78
DATA_IO_RL2_BW_V_79
DATA_IO_RL2_BW_V_80
DATA_IO_RL2_BW_V_81
OP_INTRFC_CDP100_MX_B_MUX_N_1
OP_INTRFC_CDPABRT_MX_B_MUX_N_1
OP_INTRFC_CDPAM_MX_B_MUX_N_1
OP_INTRFC_CDPAT0_MX_B_MUX_N_1
OP_INTRFC_CDPCALENMX_B_MUX_N_1
OP_INTRFC_CDPNULL_MX_B_MUX_N_1
OP_INTRFC_CDPSTRK_MX_B_MUX_N_1
OP_INTRFC_ST8100_MX_B_MUX_N_1
OP_INTRFC_ST8ABRT_MX_B_MUX_N_1
OP_INTRFC_ST8AM_MX_B_MUX_N_1
OP_INTRFC_ST8AT0_MX_B_MUX_N_1
OP_INTRFC_ST8CALENMX_B_MUX_N_1
OP_INTRFC_ST8NULL_MX_B_MUX_N_1
OP_INTRFC_ST8STRK_MX_B_MUX_N_1
ST8_A_M
ST8_ABORT
ST8_AT_0
ST8_AT_100
ST8_NULL
ST8_STROKE
ST8100_MX
ST8ABRT_MX
ST8AM_MX
ST8AT0_MX
ST8CALENBL
ST8CALENMX
ST8NULL_MX
ST8STRK_MX
OP_INTRFC_CDP_STROKE
OP_INTRFC_CDPNULL_B_NAME
OP_INTRFC_CDPCALENBL_B_NAME
OP_INTRFC_CDP_ABORT_B_NAME
OP_INTRFC_CDP_AT_0_B_NAME
OP_INTRFC_CDP_AT_100_B_NAME
OP_INTRFC_ST8_STROKE_B_NAME
OP_INTRFC_ST8_NULL_B_NAME
OP_INTRFC_ST8CALENBL_B_NAME
OP_INTRFC_ST8_A_M_B_NAME
OP_INTRFC_ST8_ABORT_B_NAME
OP_INTRFC_ST8_AT_0_B_NAME
//// CDP MANUAL STROKE ENABLE BLOQUE 1

  switch (CNTRL_MODE_SELECT_I_NAME){
    
    case 2:
      OP_INTRFC_CDPSTRK_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_68;
    break;
    case 3:
      OP_INTRFC_CDPSTRK_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_68;
    break;    
    case 5:
      OP_INTRFC_CDPSTRK_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_68;
    break;    
    default:
      OP_INTRFC_CDPSTRK_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_CDP_STROKE = OP_INTRFC_CDPCALENMX_B_MUX_N_1;

//// CDP NULL CALC ENABLE BLOQUE 2

  switch (CNTRL_MODE.SELECT.I_NAME){
    
    case 2:
      OP_INTRFC_CDPNULL_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_69;
    break;
    case 3:
      OP_INTRFC_CDPNULL_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_69;
    break;
    case 5:
      OP_INTRFC_CDPNULL_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_69;
    break;
    default:
      OP_INTRFC_CDPNULL_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_CDPNULL_B_NAME = OP_INTRFC_CDPNULL_MX_B_MUX_N_1;
  
//// CDP CAL ENABLE BLOQUE 3

    switch (CNTRL_MODE.SELECT.I_NAME){
      
      case 2:
        OP_INTRFC_CDPCALENMX_B_MUX_N_1 = DATA_IO_LL2_BW_V_70;
      break;
      case 3:
        OP_INTRFC_CDPCALENMX_B_MUX_N_1 = DATA_IO_RL2_BW_V_70;
      break;
      case 5:
        OP_INTRFC_CDPCALENMX_B_MUX_N_1 = DATA_IO_DCS_BW_V_70;
      break;
      default:
        OP_INTRFC_CDPCALENMX_B_MUX_N_1 = 0;
      break;
  
    }

    OP_INTRFC_CDPCALENBL_B_NAME = OP_INTRFC_CDPCALENMX_B_MUX_N_1;

//// CDO AUTO/MANUAL CAL BLOQUE 4


  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDPAM_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_71;
    break;
    case 3:
      OP_INTRFC_CDPAM_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_71;
    break;
    case 5:
      OP_INTRFC_CDPAM_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_71;
    break;
    default:
      OP_INTRFC_CDPAM_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_CDP_A_M_B_NAME = OP_INTRFC_CDPAM_MX_B_MUX_N_1;

//// CDP CAL ABORT BLOQUE 5

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDPABRT_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_72;
    break;
    case 3:
      OP_INTRFC_CDPABRT_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_72;
    break;
    case 5:
      OP_INTRFC_CDPABRT_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_72;
    break;
    default:
      OP_INTRFC_CDPABRT_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_CDP_ABORT_B_NAME = OP_INTRFC_CDPABRT_MX_B_MUX_N_1;

//// CDP AT MIN BLOQUE 6

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDPAT0_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_73;
    break;
    case 3:
      OP_INTRFC_CDPAT0_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_73;
    break;
    case 5:
      OP_INTRFC_CDPAT0_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_73;
    break;
    default:
      OP_INTRFC_CDPAT0_MX_B_MUX_N_1 = 0;
    break;
  }
  
  OP_INTRFC_CDP_AT_0_B_NAME = OP_INTRFC_CDPAT0_MX_B_MUX_N_1;

//// CDP AT MAX BLOQUE 7

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_CDP100_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_74;
    break;
    case 3:
      OP_INTRFC_CDP100_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_74;
    break;
    case 5:
      OP_INTRFC_CDP100_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_74;
    break;
    default:
      OP_INTRFC_CDP100_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_CDP_AT_100_B_NAME = OP_INTRFC_CDP100_MX_B_MUX_N_1; 

//// ST8 MANUAL STROKE ENABLE BLOQUE 8

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8STRK_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_75;
    break;
    case 3:
      OP_INTRFC_ST8STRK_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_75;
    break;
    case 5:
      OP_INTRFC_ST8STRK_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_75;
    break;
    default:
      OP_INTRFC_ST8STRK_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_ST8_STROKE_B_NAME = OP_INTRFC_ST8STRK_MX_B_MUX_N_1;

//// ST8 NULL CALC ENABLE BLOQUE 9 

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8NULL_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_76;
    break;
    case 3:
      OP_INTRFC_ST8NULL_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_76;
    break;
    case 5:
      OP_INTRFC_ST8NULL_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_76;
    break;
    default:
      OP_INTRFC_ST8NULL_MX_B_MUX_N_1 = 0;
    break;
  }
  
  OP_INTRFC_ST8_NULL_B_NAME = OP_INTRFC_ST8NULL_MX_B_MUX_N_1;

//// ST8 CAL ENABLE BLOQUE 10

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8CALENMX_B_MUX_N_1 = DATA_IO_LL2_BW_V_77;
    break;
    case 3:
      OP_INTRFC_ST8CALENMX_B_MUX_N_1 = DATA_IO_RL2_BW_V_77;
    break;
    case 5:
      OP_INTRFC_ST8CALENMX_B_MUX_N_1 = DATA_IO_DCS_BW_V_77;
    break;
    default:
      OP_INTRFC_ST8CALENMX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_ST8CALENBL_B_NAME = OP_INTRFC_ST8CALENMX_B_MUX_N_1;

//// ST8 AUTO/MANUAL CAL BLOQUE 11

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8AM_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_78;
    break;
    case 3:
      OP_INTRFC_ST8AM_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_78;
    break;
    case 5:
      OP_INTRFC_ST8AM_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_78;
    break;
    default:
      OP_INTRFC_ST8AM_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_ST8_A_M_B_NAME = OP_INTRFC_ST8AM_MX_B_MUX_N_1; 

//// ST8 CAL ABORT BLOQUE 12

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8ABRT_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_79;
    break;
    case 3:
      OP_INTRFC_ST8ABRT_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_79;
    break;
    case 5:
      OP_INTRFC_ST8ABRT_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_79;
    break;
    default:
      OP_INTRFC_ST8ABRT_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_ST8_ABORT_B_NAME = OP_INTRFC_ST8ABRT_MX_B_MUX_N_1;

//// ST8 AT MIN BLOQUE 13

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8AT0_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_80;
    break;
    case 3:
      OP_INTRFC_ST8AT0_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_80;
    break;
    case 5:
      OP_INTRFC_ST8AT0_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_80;
    break;
    default:
      OP_INTRFC_ST8AT0_MX_B_MUX_N_1 = 0
    break;
  }

  OP_INTRFC_ST8_AT_0_B_NAME = OP_INTRFC_ST8AT0_MX_B_MUX_N_1;

//// ST8 AT MAX BLOQUE 14

  switch (CNTRL_MODE.SELECT.I_NAME){
    case 2:
      OP_INTRFC_ST8100_MX_B_MUX_N_1 = DATA_IO_LL2_BW_V_81;
    break;
    case 3:
      OP_INTRFC_ST8100_MX_B_MUX_N_1 = DATA_IO_RL2_BW_V_81;
    break;
    case 5:
      OP_INTRFC_ST8100_MX_B_MUX_N_1 = DATA_IO_DCS_BW_V_81;
    break;
    default:
      OP_INTRFC_ST8100_MX_B_MUX_N_1 = 0;
    break;
  }

  OP_INTRFC_ST8_AT_100_B_NAME = OP_INTRFC_ST8100_MX_B_MUX_N_1;

